<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="43aec23b-554d-4403-b1ac-67bedbd5a6cf" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript JSX File" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectId" id="23jxsL8nT6k3bC2oIB2sandv2Lp" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="nodejs.jest.jest_package" value="$PROJECT_DIR$/node_modules/react-scripts" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="ts.external.directory.path" value="$PROJECT_DIR$/node_modules/typescript/lib" />
  </component>
  <component name="RunManager" selected="Jest.dataMapper functions.word score.weighted.should score word based on how frequent each char is">
    <configuration name="dataMapper functions.frequency by presence.given an array of words.should count the number of words the letter appears in" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/functions/__tests__/dataMapper.test.ts" />
      <test-names>
        <test-name value="dataMapper functions" />
        <test-name value="frequency by presence" />
        <test-name value="given an array of words" />
        <test-name value="should count the number of words the letter appears in" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="dataMapper functions.letterFrequency.given an array of words.should return an object with frequency of each letter" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/functions/__tests__/dataMapper.test.ts" />
      <test-names>
        <test-name value="dataMapper functions" />
        <test-name value="letterFrequency" />
        <test-name value="given an array of words" />
        <test-name value="should return an object with frequency of each letter" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="dataMapper functions.totalLetters.should sum chars in word list" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/functions/__tests__/dataMapper.test.ts" />
      <test-names>
        <test-name value="dataMapper functions" />
        <test-name value="totalLetters" />
        <test-name value="should sum chars in word list" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="dataMapper functions.word score.linear.should score word based on how many required letters are present" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/functions/__tests__/dataMapper.test.ts" />
      <test-names>
        <test-name value="dataMapper functions" />
        <test-name value="word score" />
        <test-name value="linear" />
        <test-name value="should score word based on how many required letters are present" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="dataMapper functions.word score.weighted.should score word based on how frequent each char is" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <node-options value="" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/functions/__tests__/dataMapper.test.ts" />
      <test-names>
        <test-name value="dataMapper functions" />
        <test-name value="word score" />
        <test-name value="weighted" />
        <test-name value="should score word based on how frequent each char is" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.dataMapper functions.word score.weighted.should score word based on how frequent each char is" />
        <item itemvalue="Jest.dataMapper functions.word score.linear.should score word based on how many required letters are present" />
        <item itemvalue="Jest.dataMapper functions.frequency by presence.given an array of words.should count the number of words the letter appears in" />
        <item itemvalue="Jest.dataMapper functions.letterFrequency.given an array of words.should return an object with frequency of each letter" />
        <item itemvalue="Jest.dataMapper functions.totalLetters.should sum chars in word list" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="43aec23b-554d-4403-b1ac-67bedbd5a6cf" name="Changes" comment="" />
      <created>1642261503757</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1642261503757</updated>
      <workItem from="1642261507379" duration="15515000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>